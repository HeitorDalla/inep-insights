# Importa depend√™ncias
import sys
import os

# Determina o diret√≥rio raiz do projeto (um n√≠vel "atr√°s" deste arquivo)
ROOT_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
# Insere o ROOT_DIR no in√≠cio do sys.path se ainda n√£o estiver presente
if ROOT_DIR not in sys.path:
    sys.path.insert(0, ROOT_DIR)

# Importa bibliotecas 
import streamlit as st
from streamlit_option_menu import option_menu

# Importa m√≥dulos internos internos do projeto
from src.database.get_connection import get_connection
from frontend.views.home import show_home_page
from frontend.views.analise_geral import show_analise_geral_page
from frontend.views.analise_especifica import show_analise_especifica_page

# Configura√ß√£o inicial da p√°gina Streamlit
st.set_page_config(
    page_title="[editar]",             # T√≠tulo da aba do navegador              
    page_icon="üìä",                   # √çcone da aplica√ß√£o
    layout="wide",                     # Largura m√°xima do layout
    initial_sidebar_state="collapsed", # Sidebar inicialmente recolhida  
    menu_items={                       # Itens do menu de contexto (ajuda, bug, about)
        'Get help': 'https://github.com/HeitorDalla/projeto-final',
        'Report a bug': 'https://github.com/HeitorDalla/projeto-final/issues',
        'About': "Aplicativo desenvolvido por Matheus V. Nellessen, Fl√°via ... e Heitor Villa"
    }
)



# Cria conex√£o com o banco de dados MySQL: abre uma conex√£o e cursor para executar queries
conn, cursor = get_connection()


# ‚îÄ‚îÄ‚îÄ‚îÄ Front-end ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

# Cria tr√™s colunas proporcionais (1:2:1) no sidebar para centralizar a logo
col1, col2, col3 = st.sidebar.columns([1, 2, 1])
with col2:
    # Exibe a imagem da logo no centro da segunda coluna
    st.image("frontend/assets/img/logo.png")


# Streamlit Option Menu: gera um menu com op√ß√µes e √≠cones
selected = option_menu(
    menu_title=None,
    options=["Home", "Anal. Geral", "Anal. Espec√≠fica"],
    icons=["house", "bar-chart", "bar-chart"],
    menu_icon="cast",
    default_index=0,
    orientation="horizontal",
)

# Roteamento das p√°ginas com base na op√ß√£o selecionada
if (selected == "Home"):
    show_home_page(conn)
    # Chama a fun√ß√£o "show_home_page" (importada do m√≥dulo "frontend.views.home")
    # Passa o objeto "conn" como argumento, que √© conector do banco de dados
    # Por fim, dentro de "show_home_page()" (no arquivo "home.py"), todo o c√≥digo que monta a tela ‚ÄúHome‚Äù √© executado
    
if selected == 'Anal. Geral':
    show_analise_geral_page(conn)
    # Semelhante ao primeiro

if (selected == "Anal. Espec√≠fica"):
    show_analise_especifica_page (conn)
    # Semelhante ao primeiro